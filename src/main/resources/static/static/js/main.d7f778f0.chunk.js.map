{"version":3,"sources":["config/Config.js","components/UploadPageChild.js","components/UploadPage.js","components/ExpireMessage.js","components/PageComponent.js","components/ListFilesPage.js","hooks/UseFetchHook.js","components/NavBar.js","components/App.js","reportWebVitals.js","index.js"],"names":["Config","UploadPageChild","addToast","useToasts","getUploadParams","url","onChangeStatus","status","meta","console","log","appearance","autoDismiss","onSubmit","files","allFiles","map","f","forEach","remove","styles","dropzone","minHeight","maxHeight","UploadPage","id","ExpireMessage","props","useState","visible","setVisible","useEffect","setTimeout","callback","delay","children","PaginationComponent","pageInput","React","items","itemsList","currentPage","setCurrentPage","isNumberValid","setIsNumberValid","itemsPerPage","setItemsPerPage","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","pageNumbers","renderItems","item","index","fileName","fname","fileDate","dateFormat","date","fileSize","size","toFixed","trim","length","onClick","onAction","bind","i","Math","ceil","push","handleClick","event","preventDefault","Number","target","renderPageNumbers","number","isCurrent","className","htmlFor","type","ref","defaultValue","onChange","value","isNaN","current","pageInputNum","downloadFile","file","fetch","then","response","blob","window","URL","createObjectURL","a","document","createElement","href","download","click","noFilesComponent","ListFilesPage","data","setData","loading","setLoading","fetchFiles","useCallback","controller","signal","json","AbortController","abort","useFetch","PageComponent","LinkComponent","to","caption","NavBar","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7f778f0.chunk.js","sourcesContent":["export  const Config =  {\r\n\r\n    DEV_URL :\"/\",//\"http://localhost:8666/\",\r\n    URL : \"/\",\r\n    VER_NUMBER:\"0.0.4\"\r\n\r\n\r\n}","import Dropzone from \"react-dropzone-uploader\";\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport {useToasts} from 'react-toast-notifications';\r\nimport React from \"react\";\r\nimport {Config} from \"../config/Config\";\r\n\r\nconst UploadPageChild = () => {\r\n\r\n    const {addToast} = useToasts();\r\n    const getUploadParams = () => {\r\n        return {url: Config.DEV_URL+\"api/uploadFile\"}\r\n    }\r\n\r\n    const handleChangeStatus = ({meta}, status) => {\r\n        console.log(meta,status);\r\n        console.log(status, meta);\r\n        if (status === \"preparing\") {\r\n            addToast(status, {appearance: 'info',autoDismiss:4});\r\n        }\r\n        if (status === \"done\") {\r\n            addToast(status, {appearance: 'success',autoDismiss:4});\r\n        }\r\n        if (status === \"exception_upload\") {\r\n            addToast(status, {appearance: 'error',autoDismiss:4});\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (files, allFiles) => {\r\n        console.log(files.map(f => f.meta))\r\n        allFiles.forEach(f => f.remove())\r\n    }\r\n\r\n    return (\r\n\r\n        <Dropzone\r\n            getUploadParams={getUploadParams}\r\n            onChangeStatus={handleChangeStatus}\r\n            onSubmit={handleSubmit}\r\n            styles={{dropzone: {minHeight: 200, maxHeight: 250}}}\r\n        />\r\n\r\n\r\n    )\r\n}\r\nexport default UploadPageChild;","import {ToastProvider} from \"react-toast-notifications\";\r\nimport React from \"react\";\r\nimport UploadPageChild from \"./UploadPageChild\";\r\n\r\nconst UploadPage = () => {\r\n    return (\r\n        <section id={\"upload-page\"}>\r\n            <ToastProvider>\r\n                <UploadPageChild/>\r\n            </ToastProvider>\r\n        </section>\r\n    )\r\n}\r\nexport default UploadPage;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ExpireMessage = (props) => {\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n           if(props.callback){\r\n               props.callback()\r\n           }\r\n\r\n        }, props.delay);\r\n    }, [props]);\r\n\r\n    return visible ? <div>{props.children}</div> : <div />;\r\n};\r\n\r\nexport default ExpireMessage;","import {useState} from \"react\"\r\nimport dateFormat from \"dateformat\";\r\nimport * as React from \"react\";\r\nimport ExpireMessage from \"./ExpireMessage\";\r\n\r\nconst PaginationComponent = (props) => {\r\n    const defaultItemsPerPage = 10\r\n    let pageInput = React.createRef();\r\n    // eslint-disable-next-line\r\n    const [itemsList, setItemsList] = useState(props.items)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [isNumberValid, setIsNumberValid] = useState(true)\r\n    // eslint-disable-next-line\r\n    const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage)\r\n    const indexOfLastTodo = currentPage * itemsPerPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - itemsPerPage;\r\n    const currentTodos = itemsList.slice(indexOfFirstTodo, indexOfLastTodo);\r\n    const pageNumbers = [];\r\n\r\n    const renderItems = currentTodos.map((item, index) => {\r\n        let fileName  = item.fname\r\n        let fileDate =dateFormat(item.date,\"yyyy-mm-dd HH:MM:ss\");\r\n        let fileSize = (item.size.toFixed(2).trim().length<=8)\r\n            ?((item.size/1024).toFixed(2)+\" KB\"):((item.size/(1024*1024)).toFixed(2)+\" MB\")\r\n       console.log(fileName+\"  \"+ item.size.toFixed(2).trim() + \"  \"+ item.size.toFixed(2).trim().length)\r\n        return (\r\n        <tr key={index}>\r\n            <th>{fileName}</th>\r\n            <th>{fileSize}</th>\r\n            <th>{fileDate}</th>\r\n            <th><button onClick={props.onAction.bind(this, item.fname)}>Download</button></th>\r\n        </tr>\r\n    )\r\n    });\r\n    const handleNavigationCLick = (event) => {\r\n        event.preventDefault()\r\n        if (isNaN(pageInput.current.value) || pageInput.current.value > pageNumbers.length || pageInput.current.value < 1) {\r\n            setIsNumberValid(false)\r\n        } else {\r\n            let pageInputNum = Number(pageInput.current.value)\r\n            setIsNumberValid(true)\r\n            setCurrentPage(pageInputNum)\r\n        }\r\n        pageInput.current.value = \"\"\r\n    }\r\n    for (let i = 1; i <= Math.ceil(itemsList.length / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        setCurrentPage(Number(event.target.id))\r\n    }\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n        let isCurrent = number === currentPage\r\n\r\n        return (\r\n            <li\r\n                className={isCurrent ? \"current-page\" : \"\"}\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n            >\r\n                {number}\r\n            </li>\r\n        );\r\n    });\r\n\r\n\r\n    const handleItemsPerPage = (event) => {\r\n        setItemsPerPage(Number(event.target.value))\r\n        setCurrentPage(1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>File name</th>\r\n                    <th>Size</th>\r\n                    <th>Date created</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {renderItems}\r\n                </tbody>\r\n            </table>\r\n            <ul id={\"page-numbers\"}>\r\n                {renderPageNumbers}\r\n            </ul>\r\n            <div id={\"page-nav\"}>\r\n                <form>\r\n                    <label htmlFor={\"page-input\"}>Go to page: </label>\r\n                    <input id=\"page-input\" type={\"text\"} ref={pageInput}/>\r\n                    <label htmlFor=\"items-per-page\">Items per page:</label>\r\n                    <select defaultValue={defaultItemsPerPage} id=\"items-per-page\" onChange={handleItemsPerPage}>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                    <button onClick={handleNavigationCLick}>Go!</button>\r\n                    {!isNumberValid ? (<ExpireMessage callback={()=>{setIsNumberValid(true)}} delay={1000}>\r\n                            <p id={\"message-incorrect-number-option\"}>Not a valid page option</p>\r\n                        </ExpireMessage>) :\r\n                        (<div/>)}\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default PaginationComponent;","import React from 'react';\r\nimport {useFetch} from \"../hooks/UseFetchHook\";\r\nimport {Config} from \"../config/Config\";\r\nimport PageComponent from \"./PageComponent\";\r\n\r\nconst ListFilesPage = () => {\r\n    const [data, loading] = useFetch(Config.DEV_URL + \"api/getFileListGson\")\r\n    return (\r\n        <section id={\"all-files-page\"}>\r\n            {\r\n                loading ? (<div className={\"loader\"}>Loading...</div>) : (data.length === 0 ? (noFilesComponent()) :\r\n                   <PageComponent items ={data} onAction = {downloadFile}/>)\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nconst downloadFile = (file) => {\r\n    console.log(\"Trying to download file with name \" + file)\r\n    fetch(Config.DEV_URL + \"api/downloadFile/\" + file)\r\n        .then(response => {\r\n        response.blob().then(blob => {\r\n           // let urlReact = ReactDom.render(<a href={blob}/>,document.getElementById(\"app\"))\r\n           let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = file;\r\n            a.click();\r\n        });\r\n    })\r\n}\r\nconst noFilesComponent = () => {\r\n    return (\r\n        <p>No files Yet!</p>\r\n    )\r\n}\r\n// const myFileComponent = (file, key) => {\r\n//     return (\r\n//         <p key={key}>{file}\r\n//             <button onClick={downloadFile.bind(this, file)}>Download</button>\r\n//         </p>\r\n//     )\r\n// }\r\n\r\nexport default ListFilesPage;","import {useState, useEffect} from \"react\";\r\nimport {useCallback} from \"react\";\r\n\r\nfunction useFetch(url) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const fetchFiles = useCallback(async (controller) => {\r\n        try {\r\n            const response = await fetch(url, {signal: controller.signal});\r\n            const json = await response.json();\r\n            setData(json);\r\n            setLoading(false)\r\n        } catch (e) {\r\nsetLoading(true)\r\n        } finally {\r\nsetLoading(false)\r\n        }\r\n    },[url])\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController()\r\n        fetchFiles(controller).then(()=>{setLoading(false)})\r\n        return () => controller.abort()\r\n\r\n    }, [fetchFiles]);\r\n\r\n\r\n    return [data, loading];\r\n}\r\n\r\nexport {useFetch};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Config} from \"../config/Config\";\r\n\r\n\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <nav>\r\n            <h1>Spring Cloud Beta {Config.VER_NUMBER}</h1>\r\n            <ul className=\"nav\">\r\n                <LinkComponent caption=\"Upload Files\" href=\"/\"/>\r\n                <LinkComponent caption=\"List Files\" href=\"/list-files\"/>\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nconst LinkComponent = (props) => {\r\n    return (\r\n        <li className=\"item-nav\">\r\n            <Link className=\"link-nav\" to={props.href}>{props.caption}</Link>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport \"../App.css\"\r\nimport UploadPage from \"./UploadPage\";\r\nimport {\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport ListFilesPage from \"./ListFilesPage\";\r\nimport NavBar from \"./NavBar\";\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n         <NavBar/>\r\n            <Switch>\r\n                <Route path=\"/list-files\">\r\n                    <ListFilesPage/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <UploadPage/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App/>\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}