{"version":3,"sources":["UploadPage.js","AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["UploadPage","addToast","useToasts","getUploadParams","url","onChangeStatus","status","meta","console","log","appearance","onSubmit","files","allFiles","map","f","forEach","remove","styles","dropzone","minHeight","maxHeight","AppBar","className","href","tabIndex","aria-disabled","App","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAmCeA,EA7BM,WAAM,IAEfC,EAAaC,sBAAbD,SAgBR,OAEI,cAAC,IAAD,CACIE,gBAlBgB,WACpB,MAAO,CAACC,IAAK,oBAkBTC,eAfmB,SAAC,EAAQC,GAAY,IAAnBC,EAAkB,EAAlBA,KACzBC,QAAQC,IAAIH,EAAQC,GACpBN,EAASK,EAAQ,CAAEI,WAAY,aAc3BC,SAXa,SAACC,EAAOC,GACzBL,QAAQC,IAAIG,EAAME,KAAI,SAAAC,GAAC,OAAIA,EAAER,SAE7BM,EAASG,SAAQ,SAAAD,GAAC,OAAIA,EAAEE,aASpBC,OAAQ,CAACC,SAAU,CAACC,UAAW,IAAKC,UAAW,SCT5CC,MAnBf,WACI,OACI,gCACI,yDACA,qBAAIC,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkBC,KAAK,IAApC,sBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,oBAAoBC,KAAK,IAAIC,SAAS,KAAKC,gBAAc,OAAtE,+BCILC,EAXH,SAACC,GACT,OACI,sBAAKL,UAAW,MAAhB,UACI,cAAC,EAAD,IACA,cAAC,gBAAD,UACA,cAAC,EAAD,UCAGM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.776f65f2.chunk.js","sourcesContent":["import Dropzone from \"react-dropzone-uploader\";\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications';\r\n//import Dropzone from \"react-dropzone-uploader\";\r\nimport React from \"react\";\r\n\r\nconst  UploadPage =  () =>{\r\n\r\n    const { addToast } = useToasts();\r\n    const getUploadParams = () => {\r\n        return {url: '/api/uploadFile'}\r\n    }\r\n\r\n    const handleChangeStatus = ({meta}, status) => {\r\n        console.log(status, meta)\r\n        addToast(status, { appearance: 'success' });\r\n    }\r\n\r\n    const handleSubmit = (files, allFiles) => {\r\n        console.log(files.map(f => f.meta))\r\n\r\n        allFiles.forEach(f => f.remove())\r\n    }\r\n\r\n    return (\r\n\r\n        <Dropzone\r\n            getUploadParams={getUploadParams}\r\n            onChangeStatus={handleChangeStatus}\r\n            onSubmit={handleSubmit}\r\n            styles={{dropzone: {minHeight: 200, maxHeight: 250}}}\r\n        />\r\n\r\n    )\r\n}\r\nexport default UploadPage;","import React from 'react';\r\n\r\nfunction AppBar() {\r\n    return (\r\n        <nav>\r\n            <h1>Spring Cloud Beta 0.0.3</h1>\r\n            <ul className=\"nav nav-pills card-header-pills\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" href=\"#\">Active</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">Link</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AppBar;","import React from 'react';\n\nimport UploadPage from \"./UploadPage\";\nimport AppBar from \"./AppBar\";\nimport {ToastProvider} from \"react-toast-notifications\";\n//const urlIP = \"87.120.103.179:8000\"\n//const urlLocalhost = \"localhost:8000\"\nconst App = (props) => {\n    return (\n        <div className={'app'}>\n            <AppBar/>\n            <ToastProvider>\n            <UploadPage/>\n            </ToastProvider>\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}